// <auto-generated />
using System;
using ApiPyme.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiPyme.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ApiPyme.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_categoria");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nombre");

                    b.Property<string>("Observacion")
                        .HasColumnType("longtext")
                        .HasColumnName("observacion");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categoria", (string)null);
                });

            modelBuilder.Entity("ApiPyme.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_compra");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_compra");

                    b.Property<int?>("IdUsuarioComerciante")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario_comerciante");

                    b.Property<int?>("IdUsuarioProveedor")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario_proveedor");

                    b.Property<int>("Iva")
                        .HasColumnType("int")
                        .HasColumnName("iva");

                    b.Property<string>("NumeroCompra")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("numero_compra");

                    b.Property<string>("Observacion")
                        .HasColumnType("longtext")
                        .HasColumnName("observacion");

                    b.Property<string>("TipoComprobante")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tipo_comprobante");

                    b.Property<decimal>("TotalCompra")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("total_compra");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("IdCompra");

                    b.HasIndex("IdUsuarioComerciante");

                    b.HasIndex("IdUsuarioProveedor");

                    b.ToTable("Compra", (string)null);
                });

            modelBuilder.Entity("ApiPyme.Models.Comprobante", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_comprobante");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_emision");

                    b.Property<int?>("IdUsuarioCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario_cliente");

                    b.Property<int?>("IdUsuarioComerciante")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario_comerciante");

                    b.Property<int>("Iva")
                        .HasColumnType("int")
                        .HasColumnName("iva");

                    b.Property<string>("NumeroComprobante")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("numero_comprobante");

                    b.Property<string>("Observacion")
                        .HasColumnType("longtext")
                        .HasColumnName("observacion");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("subtotal");

                    b.Property<string>("TipoComprobante")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tipo_comprobante");

                    b.Property<string>("TipoTransaccion")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tipo_transaccion");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("total");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("IdCompra");

                    b.HasIndex("IdUsuarioCliente");

                    b.HasIndex("IdUsuarioComerciante");

                    b.ToTable("Comprobante", (string)null);
                });

            modelBuilder.Entity("ApiPyme.Models.DetalleCompra", b =>
                {
                    b.Property<int>("IdDetalleCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_detalle_compra");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDetalleCompra"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<int>("CantidadInicial")
                        .HasColumnType("int")
                        .HasColumnName("cantidad_inicial");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int?>("IdCompra")
                        .HasColumnType("int")
                        .HasColumnName("id_compra");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("id_producto");

                    b.Property<string>("Observacion")
                        .HasColumnType("longtext")
                        .HasColumnName("observacion");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("precio_unitario");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_modificacion");

                    b.Property<int?>("productoIdProducto")
                        .HasColumnType("int");

                    b.HasKey("IdDetalleCompra");

                    b.HasIndex("IdCompra");

                    b.HasIndex("productoIdProducto");

                    b.ToTable("DetalleCompra", (string)null);
                });

            modelBuilder.Entity("ApiPyme.Models.DetalleComprobante", b =>
                {
                    b.Property<int>("IdDetalleComprobante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_detalle_comprobante");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDetalleComprobante"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int?>("IdComprobante")
                        .HasColumnType("int")
                        .HasColumnName("id_comprobante");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("id_producto");

                    b.Property<string>("Observacion")
                        .HasColumnType("longtext")
                        .HasColumnName("observacion");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("precio_unitario");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_modificacion");

                    b.Property<int?>("productoIdProducto")
                        .HasColumnType("int");

                    b.HasKey("IdDetalleComprobante");

                    b.HasIndex("IdComprobante");

                    b.HasIndex("productoIdProducto");

                    b.ToTable("DetalleComprobante", (string)null);
                });

            modelBuilder.Entity("ApiPyme.Models.DetallePedido", b =>
                {
                    b.Property<int>("IdDetallePedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_detalle_pedido");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDetallePedido"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("EstadoPedido")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("estado_pedido");

                    b.Property<string>("Observacion")
                        .HasColumnType("longtext")
                        .HasColumnName("observacion");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("id_pedido");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("id_producto");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("IdDetallePedido");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("DetallePedido", (string)null);
                });

            modelBuilder.Entity("ApiPyme.Models.Inventario", b =>
                {
                    b.Property<int>("IdInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_inventario");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdInventario"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("id_producto");

                    b.Property<int?>("IdUsuarioComerciante")
                        .HasColumnType("int")
                        .HasColumnName("id_comerciante");

                    b.Property<string>("Observacion")
                        .HasColumnType("longtext")
                        .HasColumnName("observacion");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("precio");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_modificacion");

                    b.Property<int?>("productoIdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioComercianteIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdInventario");

                    b.HasIndex("productoIdProducto");

                    b.HasIndex("usuarioComercianteIdUsuario");

                    b.ToTable("Inventario", (string)null);
                });

            modelBuilder.Entity("ApiPyme.Models.Pedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pedido");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPedido"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int?>("IdUsuarioComerciante")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario_comerciante");

                    b.Property<int?>("IdUsuarioProveedor")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario_proveedor");

                    b.Property<string>("NumeroPedido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("numero_pedido");

                    b.Property<string>("Observacion")
                        .HasColumnType("longtext")
                        .HasColumnName("observacion");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("IdPedido");

                    b.HasIndex("IdUsuarioComerciante");

                    b.HasIndex("IdUsuarioProveedor");

                    b.ToTable("Pedido", (string)null);
                });

            modelBuilder.Entity("ApiPyme.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_producto");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext")
                        .HasColumnName("descripcion");

                    b.Property<string>("EstadoProducto")
                        .HasColumnType("longtext")
                        .HasColumnName("estado_producto");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("id_categoria");

                    b.Property<int?>("IdUsuarioProveedor")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario_proveedor");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nombre_producto");

                    b.Property<string>("Observacion")
                        .HasColumnType("longtext")
                        .HasColumnName("observacion");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("precio");

                    b.Property<string>("QrPath")
                        .HasColumnType("longtext")
                        .HasColumnName("qr_path");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdUsuarioProveedor");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("ApiPyme.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nombre");

                    b.Property<string>("Observacion")
                        .HasColumnType("longtext")
                        .HasColumnName("observacion");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("IdRol");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("ApiPyme.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("apellidos");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext")
                        .HasColumnName("Direccion");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("identificacion");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nombres");

                    b.Property<string>("Observacion")
                        .HasColumnType("longtext")
                        .HasColumnName("observacion");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext")
                        .HasColumnName("telefono");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("ApiPyme.Models.UsuarioRol", b =>
                {
                    b.Property<int>("IdUsuarioRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario_rol");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdUsuarioRol"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("activo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.Property<int?>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Observacion")
                        .HasColumnType("longtext")
                        .HasColumnName("observacion");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UsuarioCreacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario_modificacion");

                    b.HasKey("IdUsuarioRol");

                    b.HasIndex("IdRol");

                    b.HasIndex("IdUsuario");

                    b.ToTable("UsuarioRol", (string)null);
                });

            modelBuilder.Entity("ApiPyme.Models.Compra", b =>
                {
                    b.HasOne("ApiPyme.Models.Usuario", "usuarioComerciante")
                        .WithMany("ComprasComerciante")
                        .HasForeignKey("IdUsuarioComerciante");

                    b.HasOne("ApiPyme.Models.Usuario", "usuarioProveedor")
                        .WithMany("ComprasProveedor")
                        .HasForeignKey("IdUsuarioProveedor");

                    b.Navigation("usuarioComerciante");

                    b.Navigation("usuarioProveedor");
                });

            modelBuilder.Entity("ApiPyme.Models.Comprobante", b =>
                {
                    b.HasOne("ApiPyme.Models.Usuario", "usuarioCliente")
                        .WithMany("ComprobantesCliente")
                        .HasForeignKey("IdUsuarioCliente");

                    b.HasOne("ApiPyme.Models.Usuario", "usuarioComerciante")
                        .WithMany("ComprobantesComerciante")
                        .HasForeignKey("IdUsuarioComerciante");

                    b.Navigation("usuarioCliente");

                    b.Navigation("usuarioComerciante");
                });

            modelBuilder.Entity("ApiPyme.Models.DetalleCompra", b =>
                {
                    b.HasOne("ApiPyme.Models.Compra", "compra")
                        .WithMany("detallesCompra")
                        .HasForeignKey("IdCompra");

                    b.HasOne("ApiPyme.Models.Producto", "producto")
                        .WithMany("detallesCompra")
                        .HasForeignKey("productoIdProducto");

                    b.Navigation("compra");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("ApiPyme.Models.DetalleComprobante", b =>
                {
                    b.HasOne("ApiPyme.Models.Comprobante", "comprobante")
                        .WithMany("detallesComprobante")
                        .HasForeignKey("IdComprobante");

                    b.HasOne("ApiPyme.Models.Producto", "producto")
                        .WithMany()
                        .HasForeignKey("productoIdProducto");

                    b.Navigation("comprobante");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("ApiPyme.Models.DetallePedido", b =>
                {
                    b.HasOne("ApiPyme.Models.Pedido", "pedido")
                        .WithMany("DetalleProductos")
                        .HasForeignKey("PedidoId");

                    b.HasOne("ApiPyme.Models.Producto", "producto")
                        .WithMany()
                        .HasForeignKey("ProductoId");

                    b.Navigation("pedido");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("ApiPyme.Models.Inventario", b =>
                {
                    b.HasOne("ApiPyme.Models.Producto", "producto")
                        .WithMany()
                        .HasForeignKey("productoIdProducto");

                    b.HasOne("ApiPyme.Models.Usuario", "usuarioComerciante")
                        .WithMany()
                        .HasForeignKey("usuarioComercianteIdUsuario");

                    b.Navigation("producto");

                    b.Navigation("usuarioComerciante");
                });

            modelBuilder.Entity("ApiPyme.Models.Pedido", b =>
                {
                    b.HasOne("ApiPyme.Models.Usuario", "usuarioComerciante")
                        .WithMany("PedidosComerciante")
                        .HasForeignKey("IdUsuarioComerciante");

                    b.HasOne("ApiPyme.Models.Usuario", "usuarioProveedor")
                        .WithMany("PedidosProveedor")
                        .HasForeignKey("IdUsuarioProveedor");

                    b.Navigation("usuarioComerciante");

                    b.Navigation("usuarioProveedor");
                });

            modelBuilder.Entity("ApiPyme.Models.Producto", b =>
                {
                    b.HasOne("ApiPyme.Models.Categoria", "categoria")
                        .WithMany("productos")
                        .HasForeignKey("IdCategoria");

                    b.HasOne("ApiPyme.Models.Usuario", "usuarioProveedor")
                        .WithMany("Productos")
                        .HasForeignKey("IdUsuarioProveedor");

                    b.Navigation("categoria");

                    b.Navigation("usuarioProveedor");
                });

            modelBuilder.Entity("ApiPyme.Models.UsuarioRol", b =>
                {
                    b.HasOne("ApiPyme.Models.Rol", "rol")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("IdRol");

                    b.HasOne("ApiPyme.Models.Usuario", "usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("IdUsuario");

                    b.Navigation("rol");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("ApiPyme.Models.Categoria", b =>
                {
                    b.Navigation("productos");
                });

            modelBuilder.Entity("ApiPyme.Models.Compra", b =>
                {
                    b.Navigation("detallesCompra");
                });

            modelBuilder.Entity("ApiPyme.Models.Comprobante", b =>
                {
                    b.Navigation("detallesComprobante");
                });

            modelBuilder.Entity("ApiPyme.Models.Pedido", b =>
                {
                    b.Navigation("DetalleProductos");
                });

            modelBuilder.Entity("ApiPyme.Models.Producto", b =>
                {
                    b.Navigation("detallesCompra");
                });

            modelBuilder.Entity("ApiPyme.Models.Rol", b =>
                {
                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("ApiPyme.Models.Usuario", b =>
                {
                    b.Navigation("ComprasComerciante");

                    b.Navigation("ComprasProveedor");

                    b.Navigation("ComprobantesCliente");

                    b.Navigation("ComprobantesComerciante");

                    b.Navigation("PedidosComerciante");

                    b.Navigation("PedidosProveedor");

                    b.Navigation("Productos");

                    b.Navigation("UsuarioRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
